---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getEntry } from 'astro:content';
import { Image } from 'astro:assets'; // For hero background image
import heroImageForOmne from '../assets/frequent_images/omne-hero.jpg'; // Static import

const omnePage = await getEntry('pages', 'omne');
const { Content } = await omnePage.render(); // For the main body content

// Use the statically imported image if hero_background_image is set in frontmatter
const heroImageSrc = omnePage.data.hero_background_image ? heroImageForOmne : null;

---
<BaseLayout title={omnePage.data.title} description={omnePage.data.seo_description}>
  <article class="omne-page">
    {heroImageSrc && (
      <section class="hero-section-omne">
        <Image 
          src={heroImageSrc} 
          alt={omnePage.data.hero_heading || 'O mně hero pozadí'} 
          class="hero-background-image" 
          widths={[768, 1024, 1920]} 
          sizes="(max-width: 768px) 100vw, (max-width: 1024px) 100vw, 100vw" 
          loading="eager"
          format="avif"
          quality={80}
        />
        <div class="hero-overlay"></div>
        <div class="hero-content container">
          {omnePage.data.hero_heading && (
            <h1 class="hero-title">{omnePage.data.hero_heading}</h1>
          )}
        </div>
      </section>
    )}

    <section class="content-section-omne">
      <div class="container">
        <div class="styled-content-box">
          <Content />
        </div>

        {omnePage.data.after_text && (
          <p class="after-text">{omnePage.data.after_text}</p>
        )}

        <div class="cta-buttons-omne">
          {omnePage.data.gallery_cta_label && omnePage.data.gallery_cta_link && (
            <a href={omnePage.data.gallery_cta_link} class="cta-button">{omnePage.data.gallery_cta_label}</a>
          )}
          {omnePage.data.contact_cta_label && omnePage.data.contact_cta_link && (
            <a href={omnePage.data.contact_cta_link} class="cta-button secondary">{omnePage.data.contact_cta_label}</a>
          )}
        </div>
      </div>
    </section>
  </article>
</BaseLayout>

<style>
  .omne-page { /* Container for the whole page if needed */ }

  .hero-section-omne {
    position: relative;
    width: 100%;
    height: 500px; /* Default height for large screens */
    overflow: hidden; /* Ensures Image component doesn't break layout */
  }

  .hero-background-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover; /* Cover the area, might crop */
    z-index: 1;
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(30, 32, 34, 0.72); /* Updated to #1e2022 with 0.72 opacity */
    z-index: 2;
  }

  .hero-content {
    position: relative; /* Changed from absolute to allow container influence */
    z-index: 3;
    height: 100%;
    display: flex;
    flex-direction: column; /* Align items vertically */
    justify-content: center; /* Vertically center */
    align-items: flex-start; /* Horizontally align to the left of container */
    color: var(--color-white);
    /* padding: 0 var(--container-padding); Already handled by .container */
  }

  .hero-title {
    font-size: clamp(2.1875rem, 5vw, 3rem); /* Responsive: 35px to 48px */
    font-weight: 700;
    color: var(--color-white);
    margin: 0; /* Remove default margin */
    /* text-align: left; Ensure it aligns left if not default */
  }

  .content-section-omne {
    padding: 3rem 0;
  }
  .content-section-omne .container { 
      /* any specific container adjustments if needed, else it inherits global .container */
  }

  .styled-content-box {
    background-color: var(--color-secondary-gray);
    color: var(--color-dark); 
    padding: 2rem;
    border-radius: 16px; 
    margin-bottom: 2rem;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  }
  .styled-content-box :global(p) {
    margin-bottom: 2em; /* Increased from 1em */
    font-size: 1rem; 
  }
  .styled-content-box :global(p:last-child) {
    margin-bottom: 0;
  }
  .styled-content-box :global(a) {
    color: var(--color-accent-blue);
    text-decoration: underline;
  }
  .styled-content-box :global(a:hover) {
    color: var(--color-primary-gray);
  }
  /* Center headings within the styled content box */
  .styled-content-box :global(h1),
  .styled-content-box :global(h2),
  .styled-content-box :global(h3),
  .styled-content-box :global(h4),
  .styled-content-box :global(h5),
  .styled-content-box :global(h6) {
    text-align: center;
  }

  .after-text {
    font-weight: bold;
    font-size: 1.25rem; /* Larger than normal text, but not a full heading */
    text-align: center; /* Or left, as preferred */
    margin-top: 2rem;
    margin-bottom: 1.5rem;
    color: var(--color-dark);
  }

  .cta-buttons-omne {
    display: flex;
    justify-content: center; /* Center buttons */
    gap: 1rem;
    margin-top: 2rem;
    flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */
  }

  .cta-button { /* Assuming you have global .cta-button styles */
    /* Local overrides or extensions if needed */
  }
  .cta-button.secondary {
    background-color: var(--color-primary-gray);
    color: var(--color-white);
    border-color: var(--color-dark);
  }
  .cta-button.secondary:hover {
    background-color: var(--color-dark);
    color: var(--color-white);
    border-color: var(--color-black);
  }

  @media (max-width: 768px) {
    .hero-section-omne {
      height: 400px; /* Adjust height for smaller screens */
    }
    .content-section-omne {
      padding: 2rem 0;
    }
    .styled-content-box {
      padding: 1.5rem;
    }
    .styled-content-box :global(p) { /* Center paragraphs on small screens */
      text-align: center;
    }
    .after-text {
      font-size: 1.15rem;
    }
  }
</style> 