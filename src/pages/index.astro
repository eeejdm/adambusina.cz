---
import BaseLayout from '../layouts/BaseLayout.astro';
import settings from '../content/settings/config.json'; // Site-wide settings
import homepageContent from '../content/pages/home.json'; // Homepage specific content
import { Image } from 'astro:assets'; // For optimized images from CMS that are in /src
import PhotoCarousel from '../components/PhotoCarousel.astro'; // Import the carousel
import signatureImage from '../assets/frequent_images/signature.png'; // Import the signature

// Import images for the new features section
import featureImage1 from '../assets/frequent_images/aimage5.jpg';
import featureImage2 from '../assets/frequent_images/aimage1.jpg';
import featureImage3 from '../assets/frequent_images/aimage7.jpg';

const featureImages = [featureImage1, featureImage2, featureImage3];

// Import image for the About Me section
import aboutImage from '../assets/frequent_images/profil1.jpg';

// Import images for the new icon features section
import iconFeatureImage1 from '../assets/frequent_images/icon3-1.png'; // Corresponds to first item
import iconFeatureImage2 from '../assets/frequent_images/icon2-1.png'; // Corresponds to second item
import iconFeatureImage3 from '../assets/frequent_images/icon1-1.png'; // Corresponds to third item
const iconFeatureImages = [iconFeatureImage1, iconFeatureImage2, iconFeatureImage3];

import { getCollection } from 'astro:content';
const homepageTestimonials = await getCollection('testimonials', ({ data }) => data.display_on_homepage === true);

// For sections like "Why Me", "Testimonials" etc., you would fetch those collections here
// import { getCollection } from 'astro:content';
// const testimonials = await getCollection('testimonials', ({ data }) => data.display_on_homepage === true);
// const whyMeFeatures = settings.homepage_why_me_features; // Assuming this is added to settings
---
<BaseLayout title="DomÅ¯"> {/* Title can be overridden or set in CMS settings */}
  <div class="container">
    <section class="hero-section">
      <div class="hero-content-column">
        <h1>{homepageContent.homepage_hero_heading}</h1>
        {/* Ensure subheading (paragraph) is a block and button is a separate block for stacking */}
        <div class="hero-subheading-wrapper">
          {homepageContent.homepage_hero_subheading && <Fragment set:html={homepageContent.homepage_hero_subheading} />}
        </div>
        {homepageContent.homepage_hero_cta_label && homepageContent.homepage_hero_cta_link && (
          <a href={homepageContent.homepage_hero_cta_link} class="cta-button hero-cta">
            {homepageContent.homepage_hero_cta_label}
          </a>
        )}
      </div>
      {/* Use the imported signatureImage with Astro's Image component */}
      <div class="hero-signature-column">
        <Image src={signatureImage} alt="Signature" class="hero-signature" width={500} />
      </div>
    </section>
  </div> {/* End of .container for hero section */}

  <PhotoCarousel images={homepageContent.carousel_images} /> {/* Add the photo carousel here - now outside .container */}

  <div class="gallery-cta-wrapper">
    {homepageContent.gallery_cta_label && homepageContent.gallery_cta_link && (
      <a href={homepageContent.gallery_cta_link} class="cta-button gallery-cta">
        {homepageContent.gallery_cta_label}
      </a>
    )}
  </div>

  {homepageContent.feature_items && homepageContent.feature_items.length === 3 && (
    <section class="features-section">
      <div class="container">
        {homepageContent.features_section_heading && (
          <h2 class="section-heading">{homepageContent.features_section_heading}</h2>
        )}
        {homepageContent.features_section_intro && (
          <div class="section-intro" set:html={homepageContent.features_section_intro} />
        )}
        
        <div class="features-grid">
          {homepageContent.feature_items.map((item, index) => (
            <div class={`feature-item ${index === 1 ? 'text-left' : 'image-left'}`}>
              <div class="feature-image-wrapper">
                <Image src={featureImages[index]} alt={item.image_alt} class="feature-image" width={400} height={400} />
              </div>
              <div class="feature-content">
                <h3>{item.heading}</h3>
                <Fragment set:html={item.text} />
              </div>
            </div>
          ))}
        </div>

        {homepageContent.features_section_cta_label && homepageContent.features_section_cta_link && (
          <div class="section-cta">
            <a href={homepageContent.features_section_cta_link} class="cta-button features-cta">
              {homepageContent.features_section_cta_label}
            </a>
          </div>
        )}
      </div>
    </section>
  )}

  {/* About Me Section */}
  {homepageContent.about_section_heading && (
    <section class="about-me-section">
      <div class="container">
        <div class="about-me-grid">
          <div class="about-me-content">
            {homepageContent.about_section_preheading && <p class="preheading">{homepageContent.about_section_preheading}</p>}
            <h2>{homepageContent.about_section_heading}</h2>
            {homepageContent.about_section_paragraph && <div class="paragraph-content" set:html={homepageContent.about_section_paragraph} />}
            {homepageContent.about_section_cta_label && homepageContent.about_section_cta_link && (
              <a href={homepageContent.about_section_cta_link} class="cta-button about-me-cta">
                {homepageContent.about_section_cta_label}
              </a>
            )}
          </div>
          <div class="about-me-image-wrapper">
            <Image src={aboutImage} alt={homepageContent.about_section_image_alt || 'Portrait'} class="about-me-image" width={500} height={500} />
          </div>
        </div>

        {homepageContent.about_section_icon_features && homepageContent.about_section_icon_features.length > 0 && (
          <div class="about-me-icon-features">
            {homepageContent.about_section_icon_features.map(feature => (
              <div class="icon-feature-item">
                <div class="icon-circle">
                  {feature.icon_type === 'camera' && (
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-camera">
                      <path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path>
                      <circle cx="12" cy="13" r="4"></circle>
                    </svg>
                  )}
                  {feature.icon_type === 'person' && (
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-user">
                      <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                      <circle cx="12" cy="7" r="4"></circle>
                    </svg>
                  )}
                  {feature.icon_type === 'clock' && (
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-clock">
                      <circle cx="12" cy="12" r="10"></circle>
                      <polyline points="12 6 12 12 16 14"></polyline>
                    </svg>
                  )}
                </div>
                <div class="icon-feature-content">
                  <h4>{feature.heading}</h4>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </section>
  )}

  {/* New Alternating Icon/Text Features Section */}
  {homepageContent.icon_feature_items && homepageContent.icon_feature_items.length === 3 && (
    <section class="icon-features-section">
      <div class="container">
        {homepageContent.icon_features_section_heading && (
          <h2 class="section-heading">{homepageContent.icon_features_section_heading}</h2>
        )}
        {homepageContent.icon_features_section_intro && (
          <div class="section-intro" set:html={homepageContent.icon_features_section_intro} />
        )}
        
        <div class="icon-features-grid">
          {homepageContent.icon_feature_items.map((item, index) => (
            <div class={`icon-feature-block ${index === 1 ? 'text-left' : 'image-left'}`}>
              <div class="icon-feature-image-wrapper">
                <Image src={iconFeatureImages[index]} alt={item.image_alt} class="icon-feature-image" width={120} height={120} />
              </div>
              <div class="icon-feature-block-content">
                <h3>{item.heading}</h3>
                <Fragment set:html={item.text} />
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  {/* Testimonials Section */}
  {homepageTestimonials && homepageTestimonials.length > 0 && (
    <section class="testimonials-section">
      <div class="container">
        <div class="testimonials-grid">
          <div class="testimonials-left-col">
            {homepageContent.testimonials_section_heading && (
              <h2>{homepageContent.testimonials_section_heading}</h2>
            )}
            {homepageContent.testimonials_section_cta_label && homepageContent.testimonials_section_cta_link && (
              <a href={homepageContent.testimonials_section_cta_link} class="cta-button testimonials-cta">
                {homepageContent.testimonials_section_cta_label}
              </a>
            )}
            {homepageTestimonials[0] && (
              <div class="testimonial-item">
                <blockquote set:html={homepageTestimonials[0].data.quote.replace(/\n/g, '<br>')} />
                <cite>
                  {homepageTestimonials[0].data.author_name}{homepageTestimonials[0].data.author_context && <span>, {homepageTestimonials[0].data.author_context}</span>}
                </cite>
              </div>
            )}
          </div>
          <div class="testimonials-right-col">
            {homepageTestimonials.slice(1, 3).map(testimonial => (
              <div class="testimonial-item">
                <blockquote set:html={testimonial.data.quote.replace(/\n/g, '<br>')} />
                <cite>
                  {testimonial.data.author_name}{testimonial.data.author_context && <span>, {testimonial.data.author_context}</span>}
                </cite>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  )}

  {/* Contact Form Section */}
  {homepageContent.contact_section_heading && (
    <section class="contact-form-section">
      <div class="container">
        <h2 class="section-heading">{homepageContent.contact_section_heading}</h2>
        <form 
          class="contact-form" 
          name="contact-index-v2" 
          method="POST"
          data-netlify="true"
          netlify-honeypot="bot-field"
          action="/thank-you/" 
        >
          <input type="hidden" name="form-name" value="contact-index-v2" />
          <p class="hidden">
            <label>
              Don't fill this out if you're human: <input name="bot-field" />
            </label>
          </p>
          <div class="form-group">
            <label for="name">JmÃ©no</label>
            <input type="text" name="name" id="name" required />
          </div>
          <div class="form-group">
            <label for="email">E-mail</label>
            <input type="email" name="email" id="email" required />
          </div>
          <div class="form-group">
            <label for="phone">Telefon (nepovinnÃ©)</label>
            <input type="tel" name="phone" id="phone" />
          </div>
          <div class="form-group">
            <label for="message">ZprÃ¡va</label>
            <textarea name="message" id="message" rows="5" required></textarea>
          </div>
          <div class="form-group form-submit-group">
            <button type="submit" class="cta-button contact-form-submit">Odeslat</button>
          </div>
        </form>
      </div>
    </section>
  )}

</BaseLayout>

<style>
  .hero-section {
    padding-top: 6rem; /* Increased top padding for more space above hero */
    padding-bottom: 4rem;
    display: grid; /* Using grid for layout */
    grid-template-columns: 1fr 1fr; /* Equal width columns */
    gap: 3rem; /* Increased gap for better spacing with larger signature */
    align-items: center;
  }

  .hero-content-column {
    text-align: left;
    display: flex; /* Use flexbox for content stacking */
    flex-direction: column; /* Stack items vertically */
    align-items: flex-start; /* Align items to the start (left) */
  }
  
  .hero-subheading-wrapper :global(p) {
    font-size: 1.2rem; /* Default from original hero-section p */
    max-width: 60ch;
    margin-bottom: 1.5rem; /* Space below paragraph */
  }

  .hero-signature-column {
    text-align: center; /* Center signature in its column */
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .hero-section h1 {
    font-size: 3rem; /* Default from original hero-section h1 */
    margin-bottom: 1rem;
  }

  .hero-cta {
    display: inline-block;
    background-color: var(--color-secondary-gray, #cbd6de);
    color: var(--color-dark, #1e2022);
    padding: 12px 18px; /* Explicit px padding */
    border-radius: 2em; /* Keeps the pill shape relative to font-size/padding */
    text-decoration: none;
    font-family: var(--font-headings); /* Poppins */
    font-size: 14px; /* Explicit px font size */
    font-weight: 600;
    transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
    border: 2px solid transparent;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    position: relative;
    margin-top: 1rem; 
  }

  .hero-cta:hover,
  .hero-cta:focus {
    background-color: var(--color-primary-gray, #55616a);
    color: var(--color-white, #ffffff);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
  }

  .hero-cta::after {
    content: 'â';
    margin-left: 10px; /* Adjusted for px padding */
    font-size: 1.2em;  /* Relative to 14px font-size */
    line-height: 1; /* Ensure arrow aligns well vertically */
    transition: transform 0.2s ease;
  }

  .hero-cta:hover::after,
  .hero-cta:focus::after {
    transform: translateX(3px);
  }

  .hero-signature {
    max-width: 500px;
    width: 100%;
    height: auto;
    display: block;
  }

  .gallery-cta-wrapper {
    text-align: center; 
    margin-top: 2rem; 
    margin-bottom: 4rem; /* Added more space below this CTA */
  }

  .gallery-cta {
    display: inline-block;
    background-color: var(--color-secondary-gray, #cbd6de);
    color: var(--color-dark, #1e2022);
    padding: 12px 18px;
    border-radius: 2em;
    text-decoration: none;
    font-family: var(--font-headings); 
    font-size: 14px; 
    font-weight: 600;
    transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
    border: 2px solid transparent;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    position: relative;
  }

  .gallery-cta:hover,
  .gallery-cta:focus {
    background-color: var(--color-primary-gray, #55616a);
    color: var(--color-white, #ffffff);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
  }

  .gallery-cta::after { 
    content: 'â';
    margin-left: 10px;
    font-size: 1.2em;
    line-height: 1;
    transition: transform 0.2s ease;
  }

  .gallery-cta:hover::after,
  .gallery-cta:focus::after {
    transform: translateX(3px);
  }

  /* Features Section Styles */
  .features-section {
    padding: 4rem 0;
  }

  .section-heading {
    text-align: center;
    font-size: 2.5rem; /* Or use var(--h2-font-size) if defined */
    margin-bottom: 1rem;
  }

  .section-intro {
    text-align: center;
    font-size: 1rem; /* Changed from 1.1rem (approx 17.6px) to 1rem (16px if base is 16px) */
    max-width: 70ch;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 3rem;
  }
  .section-intro :global(p) {
    margin-bottom: 0; /* Reset margin for paragraph inside intro if set by global p */
  }

  .features-grid {
    display: flex;
    flex-direction: column;
    gap: 3rem; /* Space between feature items */
  }

  .feature-item {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2.5rem; /* Gap between image and text */
    align-items: center;
  }

  .feature-item.text-left .feature-image-wrapper {
    order: 2;
  }
  .feature-item.text-left .feature-content {
    order: 1;
  }

  .feature-image-wrapper {
    width: 400px; /* Desired width on large screens */
    height: 400px; /* Desired height on large screens */
    border-radius: 9999px; /* Ensure full circle */
    overflow: hidden; /* Clip the image */
    justify-self: center; /* Center the wrapper in its grid cell */
  }
  .feature-image {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Fill the circle, crop if needed */
    display: block;
  }

  .feature-content h3 {
    font-size: 1.75rem; /* Or var(--h3-font-size) */
    margin-bottom: 0.75rem;
  }
  .feature-content :global(p) {
    font-size: 1rem;
    line-height: 1.6;
  }

  .section-cta {
    text-align: center;
    margin-top: 3rem;
  }

  .features-cta {
    /* Inherits .cta-button styles, can add specific overrides if needed */
    /* Example: background-color: var(--color-accent-blue); color: var(--color-white); */
     display: inline-block;
    background-color: var(--color-secondary-gray, #cbd6de);
    color: var(--color-dark, #1e2022);
    padding: 12px 18px;
    border-radius: 2em;
    text-decoration: none;
    font-family: var(--font-headings); 
    font-size: 14px; 
    font-weight: 600;
    transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
    border: 2px solid transparent;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    position: relative;
  }
   .features-cta:hover,
  .features-cta:focus {
    background-color: var(--color-primary-gray, #55616a);
    color: var(--color-white, #ffffff);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
  }

  .features-cta::after { 
    content: 'â';
    margin-left: 10px;
    font-size: 1.2em;
    line-height: 1;
    transition: transform 0.2s ease;
  }

  .features-cta:hover::after,
  .features-cta:focus::after {
    transform: translateX(3px);
  }

  /* About Me Section Styles */
  .about-me-section {
    background-color: var(--color-primary-gray);
    color: var(--color-white);
    padding: 4rem 0;
    margin-top: 4rem;
  }
  .about-me-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    align-items: center;
    margin-bottom: 3rem; 
  }
  .about-me-content .preheading {
    font-size: 0.9rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: var(--color-secondary-gray); 
    margin-bottom: 0.5rem;
  }
  .about-me-content h2 {
    font-size: 2.5rem;
    color: var(--color-white);
    margin-bottom: 1.5rem;
  }
  .about-me-content .paragraph-content :global(p) {
    font-size: 1.1rem;
    line-height: 1.7;
    margin-bottom: 1.5rem;
    color: var(--color-secondary-gray);
  }
  .about-me-cta {
    display: inline-block;
    background-color: var(--color-dark);
    color: var(--color-white);
    padding: 12px 24px;
    border-radius: 2em;
    text-decoration: none;
    font-family: var(--font-headings);
    font-size: 1rem;
    font-weight: 600;
    transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
    border: 2px solid transparent;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    margin-top: 1.5rem;
  }
  .about-me-cta:hover,
  .about-me-cta:focus {
    background-color: var(--color-secondary-gray);
    color: var(--color-dark);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.25);
  }
  .about-me-image-wrapper {
    width: 500px;
    height: 500px;
    border-radius: 50%;
    overflow: hidden;
    justify-self: center;
  }
  .about-me-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .about-me-icon-features {
    display: flex;
    justify-content: space-around; /* Or space-between */
    gap: 1rem;
    margin-top: 3rem;
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
  }

  .icon-feature-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    max-width: 180px; /* Adjust as needed */
  }

  .icon-circle {
    width: 70px; /* Or your desired size */
    height: 70px; /* Or your desired size */
    background-color: var(--color-dark); /* Changed from background to dark */
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1rem; /* Space between icon and text */
    box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Optional: subtle shadow */
  }

  .icon-feature-content h4 {
    margin: 0;
    font-size: 1.1rem; /* Adjust as needed */
    color: var(--color-white); /* Changed from color-text to white for better contrast on dark bg of section */
  }
  
  /* Responsive adjustments for icon features if needed */
  @media (max-width: 768px) {
    .about-me-icon-features {
      flex-direction: column;
      align-items: center;
    }
    .icon-feature-item {
      margin-bottom: 2rem; /* Space between items when stacked */
    }
  }

  /* Testimonial styling to ensure author and context are on the same line without extra space */
  .testimonial-item cite > span {
    /* This span is already inline by default, the key was removing space in the .astro file */
  }

  /* Alternating Icon/Text Features Section Styles */
  .icon-features-section {
    padding: 4rem 0;
    /* background-color: var(--color-light-gray); Optional: different background */
  }

  .icon-features-grid {
    display: flex;
    flex-direction: column;
    gap: 3rem; /* Space between icon feature blocks */
  }

  .icon-feature-block {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2.5rem; /* Gap between icon and text */
    align-items: center;
  }

  .icon-feature-block.text-left .icon-feature-image-wrapper {
    order: 2;
  }
  .icon-feature-block.text-left .icon-feature-block-content {
    order: 1;
  }

  .icon-feature-image-wrapper {
    width: 120px; /* Desired icon size */
    height: 120px;
    border-radius: 50%; /* Circular icons */
    overflow: hidden;
    justify-self: center; /* Center the wrapper in its grid cell */
    background-color: var(--color-extralight-gray); /* Optional: slight bg for icon if transparent */
    display: flex; /* For centering image if it's smaller than wrapper */
    justify-content: center;
    align-items: center;
  }
  .icon-feature-image {
    max-width: 80%; /* Ensure icon doesn't touch edges if it has padding */
    max-height: 80%;
    object-fit: contain; /* Scale down, don't crop */
    display: block;
  }

  .icon-feature-block-content h3 {
    font-size: 1.5rem; /* Adjust as needed */
    margin-bottom: 0.75rem;
    color: var(--color-dark); /* Assuming dark text on light bg */
  }
  .icon-feature-block-content :global(p) {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--color-text-body); /* Standard body text color */
  }

  /* Testimonials Section Styles */
  .testimonials-section {
    background-color: var(--color-primary-gray); /* Primary color background */
    color: var(--color-white); /* Text color for contrast */
    padding: 4rem 0;
    margin-top: 4rem; /* Space above this section */
  }
  .testimonials-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    align-items: flex-start; /* Align columns to the top */
  }
  .testimonials-left-col h2 {
    font-size: 2.5rem;
    color: var(--color-white);
    margin-bottom: 1.5rem;
  }
  .testimonials-cta {
    display: inline-block;
    background-color: var(--color-white);
    color: var(--color-primary-gray);
    padding: 12px 24px;
    border-radius: 2em;
    text-decoration: none;
    font-family: var(--font-headings);
    font-size: 1rem;
    font-weight: 600;
    transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
    border: 2px solid transparent;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    margin-bottom: 2rem; /* Space before the first testimonial in this column */
  }
  .testimonials-cta:hover,
  .testimonials-cta:focus {
    background-color: var(--color-secondary-gray);
    color: var(--color-dark);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
  }
  .testimonial-item {
    background-color: var(--color-dark); /* Darker card for testimonial */
    padding: 2rem;
    border-radius: 8px; /* Slightly rounded corners for cards */
    margin-bottom: 2rem; /* Space between testimonials in the right column */
    box-shadow: 0 4px 10px rgba(0,0,0,0.2);
  }
  .testimonial-item:last-child {
    margin-bottom: 0; /* No bottom margin for the last item in a column */
  }
  .testimonial-item blockquote {
    font-size: 1.1rem;
    line-height: 1.7;
    color: var(--color-light-gray); /* Lighter text for quote */
    margin: 0 0 1rem 0;
    padding: 0;
    border: none;
    font-style: italic;
  }
  .testimonial-item blockquote :global(br) {
    display: block; /* Ensure <br> creates a line break */
    content: "";
    margin-top: 0.5em;
  }
  .testimonial-item cite {
    font-size: 1rem;
    font-weight: 600;
    color: var(--color-white);
    font-style: normal;
  }
  .testimonial-item cite span {
    font-weight: 400;
    color: var(--color-secondary-gray);
  }

  /* Contact Form Section Styles */
  .contact-form-section {
    padding: 4rem 0;
  }

  .contact-form-section .section-heading {
    text-align: center;
    margin-bottom: 3rem;
  }

  .contact-form {
    max-width: 700px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  .form-group label {
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: var(--color-dark-gray); 
  }

  .form-group input[type="text"],
  .form-group input[type="email"],
  .form-group input[type="tel"],
  .form-group textarea {
    padding: 0.75rem 1rem;
    border: 1px solid #ced4da; /* Hardcoded light gray for testing visibility */
    background-color: #ffffff; /* Explicit white background */
    border-radius: 4px; 
    font-size: 1rem;
    font-family: var(--font-body);
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
  }

  .form-group input[type="text"]:focus,
  .form-group input[type="email"]:focus,
  .form-group input[type="tel"]:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: var(--color-primary); 
    box-shadow: 0 0 0 2px var(--color-primary-light); 
  }

  .form-group textarea {
    resize: vertical; 
  }

  .form-submit-group {
    align-items: center; 
  }
  
  .contact-form-submit {
    /* .cta-button class should already provide rounded corners (border-radius: 2em) */
    /* If it's not applying, ensure .cta-button definition is correct and reachable */
    /* No specific overrides needed here if .cta-button is working as intended */
  }

  .hidden {
    display: none;
  }

  /* General .cta-button style (ensure this is present and has border-radius) */
  /* This is likely defined earlier, but for completeness: */
  .cta-button {
    display: inline-block;
    /* ... other cta styles like background, color, padding ... */
    border-radius: 2em; /* This is the key for rounded buttons */
    text-decoration: none;
    font-family: var(--font-headings);
    font-weight: 600;
    transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
    border: 2px solid transparent;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    position: relative; 
    /* Default padding & font-size for most CTAs, can be overridden */
    padding: 12px 18px;
    font-size: 14px;
    cursor: pointer; /* Added for explicitness */
  }
  /* Ensure specific CTA variations like .hero-cta, .gallery-cta, etc., don't undo border-radius */

  @media (max-width: 992px) { 
    .hero-section {
      padding-top: 4rem;
      grid-template-columns: 1fr;
      text-align: center;
      gap: 2rem;
    }
    .hero-content-column {
      text-align: center;
      order: 1;
      align-items: center;
    }
    .hero-subheading-wrapper :global(p) {
      margin-left: auto;
      margin-right: auto;
    }
    .hero-signature-column {
      order: 2;
      margin-top: 2rem;
    }
    .hero-signature {
      max-width: 300px;
    }
    
    .feature-item {
      grid-template-columns: 1fr; /* Stack image and text */
      gap: 1.5rem;
      text-align: center;
    }
    .feature-item.text-left .feature-image-wrapper, 
    .feature-item.image-left .feature-image-wrapper {
      order: 1; /* Image always first on small screens */
      width: clamp(250px, 70vw, 350px);
      height: clamp(250px, 70vw, 350px); 
      margin-left: auto; 
      margin-right: auto; 
      border-radius: 9999px; /* Ensure full circle on smaller screens too */
    }
    .feature-item.text-left .feature-content, 
    .feature-item.image-left .feature-content {
      order: 2; /* Text always second */
    }
    .feature-content h3 {
      font-size: 1.5rem;
    }
    /* About Me Responsive */
    .about-me-grid {
      grid-template-columns: 1fr;
      text-align: center;
      margin-bottom: 2rem;
    }
    .about-me-content {
      order: 1;
    }
    .about-me-image-wrapper {
      order: 2;
      margin-top: 2rem;
      margin-left: auto;
      margin-right: auto;
      width: clamp(280px, 70vw, 400px);
      height: clamp(280px, 70vw, 400px);
    }
    .about-me-content .preheading, .about-me-content h2 {
        text-align: center;
    }
    .about-me-icon-features {
      grid-template-columns: 1fr; 
      gap: 1.5rem;
    }
    .icon-feature-item {
      flex-direction: column; 
      text-align: center;
    }
    .icon-circle {
      margin-bottom: 0.75rem;
    }

    /* Icon Features Responsive */
    .icon-feature-block {
      grid-template-columns: 1fr; /* Stack icon and text */
      gap: 1.5rem;
      text-align: center;
    }
    .icon-feature-block.text-left .icon-feature-image-wrapper,
    .icon-feature-block.image-left .icon-feature-image-wrapper {
      order: 1; /* Icon always first on small screens */
      /* width, height, margin-left/right auto handled by justify-self:center and parent text-align or direct centering */
    }
    .icon-feature-block.text-left .icon-feature-block-content,
    .icon-feature-block.image-left .icon-feature-block-content {
      order: 2; /* Text always second */
    }
    .icon-feature-block-content h3 {
      font-size: 1.3rem;
    }

    /* Testimonials Responsive */
    .testimonials-grid {
      grid-template-columns: 1fr; /* Stack columns */
    }
    .testimonials-left-col h2 {
      text-align: center;
    }
    .testimonials-left-col {
      text-align: center; /* Center button */
    }
  }

  @media (max-width: 768px) { 
    .hero-section h1 {
      font-size: 35px; /* Adjusted hero heading size for small screens */
    }
    .hero-subheading-wrapper :global(p) {
      font-size: 1rem;
    }
    .hero-signature {
      max-width: 250px;
    }
    .hero-cta {
      font-size: 13px; /* Slightly smaller for small screens */
      padding: 10px 15px; /* Slightly smaller padding */
    }
    .hero-cta::after {
       margin-left: 8px;
    }
    .gallery-cta {
       /* Example: font-size: 0.9rem; padding: 0.6em 1.2em; */
    }
    .section-heading {
      font-size: 2rem;
    }
    .section-intro {
      font-size: 1rem;
    }
    .feature-content h3 {
      font-size: 1.3rem;
    }
    .feature-image-wrapper { 
        width: clamp(200px, 60vw, 300px);
        height: clamp(200px, 60vw, 300px); 
        border-radius: 9999px; /* Ensure full circle on smallest screens */
    }
     .features-cta {
      font-size: 13px; 
      padding: 10px 15px; 
    }
    .features-cta::after {
       margin-left: 8px;
    }
    /* About Me Responsive */
    .about-me-content h2 {
      font-size: 2rem;
    }
    .about-me-content .paragraph-content :global(p) {
      font-size: 1rem;
    }
    .about-me-cta {
        font-size: 0.9rem;
        padding: 10px 20px;
    }
    .about-me-image-wrapper {
      width: clamp(250px, 75vw, 300px); 
      height: clamp(250px, 75vw, 300px);
    }
    .about-me-icon-features {
        margin-top: 2rem;
    }
    .icon-feature-content h4 {
      font-size: 1.1rem;
    }

    /* Icon Features Responsive */
    .icon-features-section {
      padding: 3rem 0;
    }
    .icon-feature-block-content h3 {
      font-size: 1.2rem;
    }
    .icon-feature-image-wrapper {
      width: 100px;
      height: 100px;
    }

    /* Testimonials Responsive */
    .testimonials-section {
      padding: 3rem 0;
    }
    .testimonials-left-col h2 {
      font-size: 2rem;
    }
    .testimonial-item blockquote {
      font-size: 1rem;
    }
    .testimonial-item cite {
      font-size: 0.9rem;
    }

    /* Contact Form Responsive */
    .contact-form-section {
      padding: 3rem 0;
    }
    .contact-form-section .section-heading {
      margin-bottom: 2rem;
    }
  }

  .icon-circle svg {
    width: 32px; /* Or your desired size */
    height: 32px; /* Or your desired size */
    stroke: var(--color-white); /* Changed from accent-blue to white */
  }

  .about-me-icon-features {
    display: flex;
    justify-content: space-around; /* Or space-between */
    gap: 1rem;
    margin-top: 3rem;
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
  }

  .icon-feature-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    max-width: 180px; /* Adjust as needed */
  }

  .icon-circle {
    width: 70px; /* Or your desired size */
    height: 70px; /* Or your desired size */
    background-color: var(--color-dark); /* Changed from background to dark */
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1rem; /* Space between icon and text */
    box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Optional: subtle shadow */
  }

  .icon-feature-content h4 {
    margin: 0;
    font-size: 1.1rem; /* Adjust as needed */
    color: var(--color-white); /* Changed from color-text to white for better contrast on dark bg of section */
  }
  
  /* Responsive adjustments for icon features if needed */
  @media (max-width: 768px) {
    .about-me-icon-features {
      flex-direction: column;
      align-items: center;
    }
    .icon-feature-item {
      margin-bottom: 2rem; /* Space between items when stacked */
    }
  }

  /* Testimonial styling to ensure author and context are on the same line without extra space */
  .testimonial-item cite > span {
    /* This span is already inline by default, the key was removing space in the .astro file */
  }
</style> 